{"version":3,"file":"filter-dot.es.js","sources":["../src/DotFilter.js"],"sourcesContent":["import {vertex} from '@tools/fragments';\nimport fragment from './dot.frag';\nimport * as PIXI from 'pixi.js';\n\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * original filter: https://github.com/evanw/glfx.js/blob/master/src/filters/fun/dotscreen.js\n */\n\n/**\n * This filter applies a dotscreen effect making display objects appear to be made out of\n * black and white halftone dots like an old printer.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/dot.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [scale=1] The scale of the effect.\n * @param {number} [angle=5] The radius of the effect.\n */\nexport default class DotFilter extends PIXI.Filter {\n\n    constructor(scale = 1, angle = 5) {\n        super(vertex, fragment);\n        this.scale = scale;\n        this.angle = angle;\n    }\n\n    /**\n     * The scale of the effect.\n     * @member {number}\n     * @default 1\n     */\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n\n    /**\n     * The radius of the effect.\n     * @member {number}\n     * @default 5\n     */\n    get angle() {\n        return this.uniforms.angle;\n    }\n    set angle(value) {\n        this.uniforms.angle = value;\n    }\n}\n"],"names":["DotFilter","scale","angle","super","this","vertex","fragment","prototypeAccessors","uniforms","value","PIXI.Filter"],"mappings":";;;;;;;g9BAoBqBA,sBAA8B,WAEnCC,EAAWC,kBAAH,kBAAW,GAC3BC,OAAMC,KAAAC,OAAQC,UACdF,KAAKH,MAAQA,EACbG,KAAKF,MAAQA,wJAQjBK,EAAAN,qBACI,OAAOG,KAAKI,SAASP,OAEzBM,EAAAN,mBAAUQ,GACNL,KAAKI,SAASP,MAAQQ,GAQ1BF,EAAAL,qBACI,OAAOE,KAAKI,SAASN,OAEzBK,EAAAL,mBAAUO,GACNL,KAAKI,SAASN,MAAQO,6CA7BSC"}