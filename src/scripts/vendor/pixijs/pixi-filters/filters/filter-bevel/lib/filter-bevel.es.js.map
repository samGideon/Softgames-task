{"version":3,"file":"filter-bevel.es.js","sources":["../src/BevelFilter.js"],"sourcesContent":["import {vertex} from '@tools/fragments';\nimport fragment from './bevel.frag';\nimport * as PIXI from 'pixi.js';\n\n/**\n * Bevel Filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/bevel.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {object} [options] - The optional parameters of the filter.\n * @param {number} [options.rotation = 45] - The angle of the light in degrees.\n * @param {number} [options.thickness = 2] - The tickness of the bevel.\n * @param {number} [options.lightColor = 0xffffff] - Color of the light.\n * @param {number} [options.lightAlpha = 0.7] - Alpha of the light.\n * @param {number} [options.shadowColor = 0x000000] - Color of the shadow.\n * @param {number} [options.shadowAlpha = 0.7] - Alpha of the shadow.\n */\nexport default class BevelFilter extends PIXI.Filter {\n    constructor(options = {}) {\n        super(vertex, fragment);\n\n        this.uniforms.lightColor = new Float32Array(3);\n        this.uniforms.shadowColor = new Float32Array(3);\n\n        options = Object.assign({\n            rotation: 45,\n            thickness: 2,\n            lightColor: 0xffffff,\n            lightAlpha: 0.7,\n            shadowColor: 0x000000,\n            shadowAlpha: 0.7,\n        }, options);\n\n        /**\n         * The angle of the light in degrees.\n         * @member {number}\n         * @default 45\n         */\n        this.rotation = options.rotation;\n\n        /**\n         * The tickness of the bevel.\n         * @member {number}\n         * @default 2\n         */\n        this.thickness = options.thickness;\n\n        /**\n         * Color of the light.\n         * @member {number}\n         * @default 0xffffff\n         */\n        this.lightColor = options.lightColor;\n\n        /**\n         * Alpha of the light.\n         * @member {number}\n         * @default 0.7\n         */\n        this.lightAlpha = options.lightAlpha;\n\n        /**\n         * Color of the shadow.\n         * @member {number}\n         * @default 0x000000\n         */\n        this.shadowColor = options.shadowColor;\n\n        /**\n         * Alpha of the shadow.\n         * @member {number}\n         * @default 0.7\n         */\n        this.shadowAlpha = options.shadowAlpha;\n\n    }\n\n    /**\n     * Update the transform matrix of offset angle.\n     * @private\n     */\n    _updateTransform() {\n        this.uniforms.transformX = this._thickness * Math.cos(this._angle);\n        this.uniforms.transformY = this._thickness * Math.sin(this._angle);\n    }\n\n    get rotation() {\n        return this._angle / PIXI.DEG_TO_RAD;\n    }\n    set rotation(value) {\n        this._angle = value * PIXI.DEG_TO_RAD;\n        this._updateTransform();\n    }\n\n    get thickness() {\n        return this._thickness;\n    }\n    set thickness(value) {\n        this._thickness = value;\n        this._updateTransform();\n    }\n\n    get lightColor() {\n        return PIXI.utils.rgb2hex(this.uniforms.lightColor);\n    }\n    set lightColor(value) {\n        PIXI.utils.hex2rgb(value, this.uniforms.lightColor);\n    }\n\n    get lightAlpha() {\n        return this.uniforms.lightAlpha;\n    }\n    set lightAlpha(value) {\n        this.uniforms.lightAlpha = value;\n    }\n\n    get shadowColor() {\n        return PIXI.utils.rgb2hex(this.uniforms.shadowColor);\n    }\n    set shadowColor(value) {\n        PIXI.utils.hex2rgb(value, this.uniforms.shadowColor);\n    }\n\n    get shadowAlpha() {\n        return this.uniforms.shadowAlpha;\n    }\n    set shadowAlpha(value) {\n        this.uniforms.shadowAlpha = value;\n    }\n}\n"],"names":["BevelFilter","options","super","vertex","fragment","this","uniforms","lightColor","Float32Array","shadowColor","Object","assign","rotation","thickness","lightAlpha","shadowAlpha","_updateTransform","transformX","_thickness","Math","cos","_angle","transformY","sin","prototypeAccessors","PIXI.DEG_TO_RAD","value","PIXI.utils","rgb2hex","hex2rgb","PIXI.Filter"],"mappings":";;;;;;;6oCAmBqBA,wBACjB,WAAYC,sBACRC,YAAMC,OAAQC,UAEdC,KAAKC,SAASC,WAAa,IAAIC,aAAa,GAC5CH,KAAKC,SAASG,YAAc,IAAID,aAAa,GAE7CP,EAAUS,OAAOC,QACbC,SAAU,GACVC,UAAW,EACXN,WAAY,SACZO,WAAY,GACZL,YAAa,EACbM,YAAa,IACdd,GAOHI,KAAKO,SAAWX,EAAQW,SAOxBP,KAAKQ,UAAYZ,EAAQY,UAOzBR,KAAKE,WAAaN,EAAQM,WAO1BF,KAAKS,WAAab,EAAQa,WAO1BT,KAAKI,YAAcR,EAAQQ,YAO3BJ,KAAKU,YAAcd,EAAQc,2SAQ/BC,4BACIX,KAAKC,SAASW,WAAaZ,KAAKa,WAAaC,KAAKC,IAAIf,KAAKgB,QAC3DhB,KAAKC,SAASgB,WAAajB,KAAKa,WAAaC,KAAKI,IAAIlB,KAAKgB,SAG/DG,EAAIZ,wBACA,OAAOP,KAAKgB,OAASI,YAEzBD,EAAIZ,sBAASc,GACTrB,KAAKgB,OAASK,EAAQD,WACtBpB,KAAKW,oBAGTQ,EAAIX,yBACA,OAAOR,KAAKa,YAEhBM,EAAIX,uBAAUa,GACVrB,KAAKa,WAAaQ,EAClBrB,KAAKW,oBAGTQ,EAAIjB,0BACA,OAAOoB,MAAWC,QAAQvB,KAAKC,SAASC,aAE5CiB,EAAIjB,wBAAWmB,GACXC,MAAWE,QAAQH,EAAOrB,KAAKC,SAASC,aAG5CiB,EAAIV,0BACA,OAAOT,KAAKC,SAASQ,YAEzBU,EAAIV,wBAAWY,GACXrB,KAAKC,SAASQ,WAAaY,GAG/BF,EAAIf,2BACA,OAAOkB,MAAWC,QAAQvB,KAAKC,SAASG,cAE5Ce,EAAIf,yBAAYiB,GACZC,MAAWE,QAAQH,EAAOrB,KAAKC,SAASG,cAG5Ce,EAAIT,2BACA,OAAOV,KAAKC,SAASS,aAEzBS,EAAIT,yBAAYW,GACZrB,KAAKC,SAASS,YAAcW,6CA9GKI"}